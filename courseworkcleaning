import pandas as pd

# input and output file : Use raw strings for file paths to avoid unicodeescape errors
input_file = r'C:\Users\kieva\Downloads\coursework\courseworkproject.csv'
output_file = r'C:\Users\kieva\Downloads\coursework\cleaned_coursework.csv'

# Step 1: Read the dataset
data = pd.read_csv(input_file, dtype=str)  # Read all data as strings

# Step 2: Remove special symbols '~' and '*'
def remove_special_symbols(value):
    if isinstance(value, str):
        return value.replace('~', '').replace('*', '')
    else:
        return value

data = data.applymap(remove_special_symbols)

# Step 3: Convert all text data to lowercase
def convert_to_lowercase(value):
    if isinstance(value, str):
        return value.lower()
    else:
        return value

data = data.applymap(convert_to_lowercase)

# Step 4: Fill empty cells with 'NA'
data = data.fillna('NA')

# Step 5: Process numerical ranges in specific columns
# Corrected column names (with trailing spaces removed)
numeric_range_columns = [
    'Life Expectancy', 
    'weight of the animal  (kg) ', 
    'weight that differ for female '
]

def calculate_range_average(cell_value):
    if isinstance(cell_value, str):
        # Extract numbers from the cell, assuming they are separated by hyphens or commas
        numbers = [float(num) for num in cell_value.split() if num.replace('.', '', 1).isdigit()]
        if len(numbers) == 2:
            return sum(numbers) / 2  # Calculate the average
        elif len(numbers) == 1:
            return numbers[0]
        else:
            return 'NA'
    else:
        return 'NA'

for column_name in numeric_range_columns:
    data[column_name] = data[column_name].apply(calculate_range_average)

# Optional: Convert columns to numeric data types after processing
for column_name in numeric_range_columns:
    data[column_name] = pd.to_numeric(data[column_name], errors='coerce')

# Step 6: Save the cleaned data
data.to_csv(output_file, index=False)

# Step 7: Display the cleaned data in the Thonny shell
print(data)
print ("the dataset has been cleaned and stored in cleaned_courseworkproject")
